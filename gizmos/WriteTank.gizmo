#! C:/Program Files/Nuke8.0v2/nuke-8.0.v2.dll -nx
version 8.0 v2

##########################################################################################
##########################################################################################
#
# addUserKnob syntax
# ------------------
# <id> - this is the id of the knob type to add.  A full list can be found here:
#     http://docs.thefoundry.co.uk/nuke/63/ndkdevguide/knobs-and-handles/knobtypes.html
#
# <name> - name of the knob used when querying it in nuke, e.g. node.knob("<name>")
#
# l "" - Label to be used for the knob in the property editor
#
# t "" - tooltip to be displayed for this knob in the property editor
#
# T "" - this is the value to set for the knob - different knobs use this in different ways
#
# M {} - for enumeration knobs, this is the list of enumerations
#
# Additional knob flags
# ---------------------
# These are set/removed by doing +/-FLAG_NAME, e.g. +STARTLINE to ensure the knob starts a 
# new line in the property editor.  A full list of flags can be found here: 
#     http://docs.thefoundry.co.uk/nuke/63/ndkdevguide/knobs-and-handles/knobflags.html
#
##########################################################################################
##########################################################################################

Gizmo {

 note_font Verdana
 mapsize {0.15 0.15}
 addUserKnob {
    20 tank_tab 
    l "Shotgun Write"
 }
 addUserKnob {
    4 tk_profile_list 
    l "Profile" 
    M {} 
    t "Select the Profile to use for this node" 
    +DO_NOT_WRITE
 }
 addUserKnob {
    1 tank_channel 
    l "Output" 
    t "Choose an output name for this Write Node to help identify it when you have more than one output in your scene." 
    +STARTLINE
 }
 addUserKnob {
    6 tk_use_name_as_channel 
    l "Use node name" 
    t "Use the node name in place of the output name" 
    -STARTLINE
 }
 addUserKnob {
    6 tk_is_fully_constructed 
    l "Is Fully Constructed" 
    t "Internal - Gets set to True in 'onCreate'.  All 'knobChanged' calls before this are ignored" 
    +DO_NOT_WRITE 
    +STARTLINE
    +INVISIBLE
 } 
 addUserKnob {
    1 profile_name 
    l "Profile Name" 
    t "The cached Profile for this node"
    +INVISIBLE
 }
 addUserKnob {
    1 render_template 
    l "Sgtk Render Template" 
    t "The Sgtk render template associated with this node"
    +INVISIBLE 
 }
 addUserKnob {
    1 publish_template 
    l "Sgtk Publish Template" 
    t "The Sgtk publish template associated with this node"
    +INVISIBLE 
 }
 addUserKnob {
    1 cached_path 
    l "Sgtk Cached Path" 
    t "The path for this write node"
    +INVISIBLE 
 }
 addUserKnob {
    1 proxy_render_template 
    l "Sgtk Proxy Render Template" 
    t "The Sgtk render template associated with this node when rendering in proxy mode"
    +INVISIBLE 
 }
 addUserKnob {
    1 proxy_publish_template 
    l "Sgtk Proxy Publish Template" 
    t "The Sgtk publish template associated with this node for proxy renders"
    +INVISIBLE 
 }
 addUserKnob {
    1 tk_cached_proxy_path 
    l "Sgtk Cached Proxy Path" 
    t "The path for this write node when rendering in proxy mode"
    +INVISIBLE 
 } 
 addUserKnob {
    1 tk_last_known_script
    l "Last Known Script"
    t "The last known script this Write node was saved in - used to determine if the script is being saved as a new file or not"
    +INVISIBLE
 }  
 addUserKnob {
    1 tk_file_type
    l "File Type"
    t "The file type to be used for the write node output - this cached value is used if the profile can't be determined"
    +INVISIBLE
 } 
 addUserKnob {
    1 tk_file_type_settings
    l "File Type Settings"
    t "A dictionary of file type settings to be applied to the Write node - this cached value is used if the profile can't be determined"
    +INVISIBLE
 }  
  
 addUserKnob {
    26 "" 
    l "" 
    +STARTLINE
 }
 addUserKnob {
    26 tk_render_mode 
    l "  " 
    T "<i style='color:gold'>[Proxy Mode]<i>" 
    t ""
 }
 addUserKnob {
    26 path_context 
    l "Context" 
    T "   " 
    t "A preview of the file location generated by the node."
 }
 addUserKnob {
    26 path_local 
    l "Local Path" 
    T "   " 
    t "A preview of the file location generated by the node."
 }
 addUserKnob {
    26 path_filename 
    l "File Name" 
    T "   " 
    t "A preview of the file location generated by the node."
 }
 
 addUserKnob {
    26 path_warning 
    l " " 
    T "   " 
    t ""
    +STARTLINE
 }
 addUserKnob {
    22 reset_path 
    l "Reset Path" 
    T "import nuke\nif hasattr(nuke, \"_shotgun_write_node_handler\"):\n    nuke._shotgun_write_node_handler.on_reset_render_path_gizmo_callback()" 
    +STARTLINE
 }
 
 addUserKnob {
    26 "" 
    l "" 
    T "   "
    +STARTLINE
 }
 addUserKnob {
    22 show_in_fs 
    l "Jump to File System" 
    T "import nuke\nif hasattr(nuke, \"_shotgun_write_node_handler\"):\n    nuke._shotgun_write_node_handler.on_show_in_fs_gizmo_callback()" 
    t "Opens a file system browser and navigates to the folder where the renders are written to." 
    +STARTLINE
 }
 addUserKnob {
    22 tk_copy_path 
    l "Copy Path to Clipboard" 
    T "import nuke\nif hasattr(nuke, \"_shotgun_write_node_handler\"):\n    nuke._shotgun_write_node_handler.on_copy_path_to_clipboard_gizmo_callback()" 
    t "Copies the current render/proxy path to the clipboard" 
    -STARTLINE
 }
 

 addUserKnob {
    26 OCIO
 }
 addUserKnob {
    41 in_colorspace
    l "in"
    T OCIOColorSpace1.in_colorspace
 }
 addUserKnob {
    26 EVENT
    l "Event : "
    t "Event name used by OCIO to apply the correct lut's (i.e. if the lut is shot specific)"
    -STARTLINE
 }
 addUserKnob {
    41 out_colorspace
    l "out"
    T OCIOColorSpace1.out_colorspace
 }
 addUserKnob {
    26 CAMERA
    l "Camera colorspace : "
    t "Camera colorspace defined in Shotgun database"
    -STARTLINE
 }
 addUserKnob {
    6 ocio_unpremult
    l premultiplied
    t "If there is an alpha channel, divide color data by the alpha before converting to the colorspace, and then multiply by the alpha afterwards. This will reproduce how partially transparent pixels are written by some renderers."
    -STARTLINE
 }
 addUserKnob {
    6 ocio_disable
    l "disable internal OCIO"
    t "Kill switch for the internal OCIO node!\nUsed to override the colorspace conversion.\n\nIn other words if you check this box you will disable any color conversion inside the Write node, but the 'out' colorspace will be used in the name of the rendered images."
    -STARTLINE
 }


 addUserKnob {
    26 "" 
    l "" 
    +STARTLINE
 }
 addUserKnob {
    41 channels 
    T Write1.channels
 }
 addUserKnob {
    41 frame_mode 
    l frame 
    T Write1.frame_mode
 }
 addUserKnob {
    41 frame 
    l "" 
    T Write1.frame
    -STARTLINE    
 }


 addUserKnob {
    80 Reformat2_disable
    l "Reset BBox"
    t "Resets the bounding box to the format of the input.\n\nEnable this if you the EXR files are to be imported in Scratch for example."
    -STARTLINE
 }
 Reformat2_disable true


 }
 addUserKnob {
    41 views 
    T Write1.views
 }
 
 addUserKnob {
    26 "" 
    l "" 
    +STARTLINE
 }
 addUserKnob {
    26 tk_render_warning 
    l " " 
    T "<i style='color:orange'>Warning<i>" 
    t ""
    +STARTLINE
 }
 addUserKnob {
    41 render_order 
    l "render order" 
    T Write1.render_order
 }
 addUserKnob {
    41 Render 
    T Write1.Render
    -STARTLINE    
 }
 addUserKnob {
    41 first 
    l "frame range" 
    T Write1.first
 }
 addUserKnob {
    41 last 
    l "" 
    T Write1.last
    -STARTLINE
 }
 addUserKnob {
    41 use_limit
    l "limit to range" 
    T Write1.use_limit
    -STARTLINE
 }
 
 addUserKnob {
    41 reading 
    l "read file" 
    T Write1.reading
 }
 addUserKnob {
    41 checkHashOnRead 
    l "" 
    T Write1.checkHashOnRead
    +INVISIBLE
 }
 addUserKnob {
    41 on_error 
    l "missing frames" 
    T Write1.on_error
 }
 addUserKnob {
    41 reload 
    l Reload 
    T Write1.reload
    -STARTLINE
 }

 knobChanged "import nuke\nif hasattr(nuke, \"_shotgun_write_node_handler\"):\n    nuke._shotgun_write_node_handler.on_knob_changed_gizmo_callback()"
 onCreate "import nuke\nif hasattr(nuke, \"_shotgun_write_node_handler\"):\n    nuke._shotgun_write_node_handler.on_node_created_gizmo_callback()"
 label "\[python nuke.thisNode().knob('in_colorspace').value()] to \[python nuke.thisNode().knob('out_colorspace').value()]"
}
 Input {
  inputs 0
  name Input
  xpos 195
  ypos -145
 }
 Reformat {
  type scale
  black_outside true
  name Reformat2
  label "Reset Bounding Box"
  xpos 195
  ypos -121
  disable {{1-parent.Reformat2_disable}}
 }
 Unpremult {
  name Unpremult1
  xpos 195
  ypos -56
  disable {{1-parent.ocio_unpremult}}
 }
 OCIOColorSpace {
  in_colorspace linear
  out_colorspace linear
  key1 EVENT
  value1 "\[python nuke.thisParent().knob('EVENT').value()]"
  key2 CAMERA
  value2 "\[python nuke.thisParent().knob('CAMERA').value()]"
  name OCIOColorSpace1
  label "\[python nuke.thisParent().knob('EVENT').toScript()]"
  xpos 195
  ypos -32
  disable {{parent.ocio_disable}}
 }
 Premult {
  name Premult1
  xpos 195
  ypos -8
  disable {{1-parent.ocio_unpremult}}
 }
 Write {
  file "\[python __import__('nuke')._shotgun_write_node_handler.on_compute_path_gizmo_callback() if hasattr(__import__('nuke'), '_shotgun_write_node_handler') else nuke.thisParent().knob('cached_path').value()]"
  proxy "\[python __import__('nuke')._shotgun_write_node_handler.on_compute_proxy_path_gizmo_callback() if hasattr(__import__('nuke'), '_shotgun_write_node_handler') else nuke.thisParent().knob('tk_cached_proxy_path').value()]"
  raw true
  beforeRender "import nuke\nif hasattr(nuke, \"_shotgun_write_node_handler\"):\n    nuke._shotgun_write_node_handler.on_before_render_gizmo_callback()"
  afterRender "import nuke\nif hasattr(nuke, \"_shotgun_write_node_handler\"):\n    nuke._shotgun_write_node_handler.on_after_render_gizmo_callback()"
  name Write1
  xpos 195
  ypos 56
 }
set N1aa72fa0 [stack 0]
 Reformat {
  type "to box"
  box_width 800
  box_height 1
  black_outside true
  name Reformat1
  xpos 303
  ypos 99
 }
 Write {
  file_type png
  name create_thumbnail
  xpos 397
  ypos 99
  disable true
 }
push $N1aa72fa0
 Output {
  name Output
  xpos 195
  ypos 156
 }
end_group
